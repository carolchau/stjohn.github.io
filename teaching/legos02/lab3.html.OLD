<title>Lab 3, Cluster V, COSMOS, UC Davis, Summer 2001</title>

<body bgcolor="ffffff" link="003399" vlink="236b8e"> 


<h1>Laboratory Exercise 3</h1>
<h2>Cluster V: Computers and Robots<br>
COSMOS Program, UC Davis<br>
16 July 2001</h2>

<hr>
<h3>Light and Touch Sensors</h3>

The first half of today's lab is to try out the light seeking and
line following programs discussed in lecture.  Some of the constant
values will need to be adjusted, depending on how close the light
sensor is to the ground and whether you have natural or artificial
light.  

<p>
The second half of the lab focuses on the touch sensor.  We will
use the touch sensor as part of a bumper, and count the number of
obstacles that are hit.  After a pre-set limit has been reached,
the robot will stop and beep (that is, after too many accidents,
the robot can't drive any more!).  
<!-- We'll then put bumpers on both
sides of the robot and write programs for the dual bumpers.-->

Today's lab uses the light sensor, the touch sensors, 
the <a href="guidenqc/linebot1.nqc">linebot1.nqc</a>,
the <a href="seek.nqc">seek.nqc</a>, and
the <a href="guidenqc/bumpbot1.nqc">bumpbot1.nqc</a> from lecture.

<p><b>Design requirements:</b>  This lab assumes that the
two motors are wired to output ports A and C.  Further, each 
motor is attached to a means of locomotion (legs, treads,
feet, etc.).  When using the light sensor, it is wired to 
sensor port 2.  The touch sensor is wired to sensor port 1. 
The second touch sensor will be wired to sensor port 3 for
the last program.



<h3>Using the light sensor</h3>

The first half of today's lab is to try out the light seeking and
line following programs discussed in lecture.  First, download
<a href="seek.nqc">seek.nqc</a>.  This program will seek out a
bright light.  If it doesn't find a light, it will beep, turn
for random distance, and go forward.  

<p>
If it's going forward and never beeping, check to see if the
sensor is connected to input port 2.  Next, increase the 
THRESHOLD constant in the program.  If the robot is beeping
and turning all the time, decrease the THRESHOLD constant.  
The values of the THRESHOLD constant will change depending on
how close the light sensor is to the ground, the ground 
surface, and the type of light.  To see the value of the light
sensor, toggle the <tt>VIEW</tt> button on the robot to sensor 
port 2.  

<p>
While you have the light sensor on the robot, also try the 
<a href="guidenqc/linebot1.nqc">linebot1.nqc</a> program.  This program
will follow a black line on the ground.  Try it out on the 
test track that comes with the robot kit.  Adjust this program 
for the current light level (change the light threshold 
constants as above).


<h3>The touch sensor and bumpers</h3>

One natural use for the touch sensor is as part of a bumper.
Wire a bumper to input sensor 1 and try 
<a href="guidenqc/bumpbot1.nqc">bumpbot1.nqc</a>.  Copy 
this program to new file:
<pre>
cp bumpbot1.nqc limited_bumps.nqc
</pre>
Change the program in the following ways, and test between
steps:
<ol>
    <li> First, change <tt>limited_bumps.nqc</tt> to beep 
	everytime it hits an obstacle. 
    <li> Next, declare a variable called <tt>num_obstacles</tt>
	and set it to 0.  After the touch sensor is bumped,
	increase the variable by 1 (one command that will do
	this is: <tt>num_obstacles++;</tt>).
    <li> Change the <tt>while(true)</tt> loop to stop after
	5 obstacles are hit.
</ol>

Modify your program so that <b>only one</b> constant needs
to be changed to change the number of obstacles you are
allowed to hit before the program stops.

<h3>Double Bumper</h3>

Add a back bumper to your robot with a touch sensor wired to 
input port 3.  Write a program (you can copy 
<tt>bumpbot1.nqc</tt> as a starting point) that changes direction 
and turns when one of the bumpers is hit.  Remember to 
initialize the new sensor, as you did for the first one.

<!--
<h3>Obstacle Course</h3>

If there's time, try your robot on the obstacle course, using 
<tt>bumpbot1.nqc</tt>.  How does it do?  Alter your program
so that it does better through the course, using the 
bumpers.
-->


</body>
</html>


